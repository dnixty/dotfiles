#!/bin/bash
# Backup an entire LVM logical volume via a LVM snapshot and store it on NAS

set -o errexit
set -o nounset


# name of the logical volume to backup
LV_NAME=$1

VG_NAME=$(vgdisplay | awk 'NR==2 { print $3 }')
SNAP_SIZE=5G
FSA_OPTIONS="-v -j3 -A -c -"
NFS_BACKUP_DIR=/mnt/media/NFS01
SNAP_NAME="$LV_NAME-snap"
STAMP="$LV_NAME-$( date +%Y.%m.%d-%H.%M )"


if [ "$(id -u)" != '0' ]
then
	echo "this script has to be run as root"
	exit 1
fi


main() {
	create_snapshot_lv
	backup
	cleanup
	echo "/dev/$VG_NAME/$LV_NAME has been backed up successfuly" >&2
}


create_snapshot_lv() {
	echo "creating snapshot volume $SNAP_NAME with size: $SNAP_SIZE" >&2
	if [ -e /dev/$VG_NAME/$LV_NAME ]
	then
		echo "the lvm snapshot already exists, please destroy it manually first"
		exit 1
	fi
	if ! lvcreate --size $SNAP_SIZE --snapshot --name "$SNAP_NAME" "/dev/$VG_NAME/$LV_NAME" >/dev/null 2>&1
	then
		echo "creation of the lvm snapshot failed"
		exit 1
	fi
}

backup() {
	echo "mounting $NFS_BACKUP_DIR" >&2
	mount $NFS_BACKUP_DIR
	echo "creating .fsa archive of $SNAP_NAME" >&2
	if fsarchiver savefs $FSA_OPTIONS $NFS_BACKUP_DIR/$STAMP.fsa /dev/$VG_NAME/$LV_NAME
	then
		md5sum $NFS_BACKUP_DIR/$STAMP.fsa > $NFS_BACKUP_DIR/$STAMP.md5
		RES=0
	else
		echo "fsarchiver failed"
		RES=1
		exit 1
	fi
}


cleanup() {
	echo -e "cleaning up"
  	umount -l $NFS_BACKUP_DIR
  	sleep 2s
	if ! lvremove -f /dev/$VG_NAME/$SNAP_NAME >/dev/null 2>&1
	then
		echo "cannot remove the lvm snapshot"
		RES=1
	fi
}

trap cleanup SIGINT SIGTERM
main
