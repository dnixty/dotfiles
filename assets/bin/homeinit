#!/bin/sh

GITLAB_ROOT=git@gitlab.com:
GITHUB_ROOT=git@github.com:
USER_NAME=dnixty
MACHINE=heimdall

[ -z "$DOTFILESDIR" ] && DOTFILESDIR="$HOME/dotfiles"
[ -z "$HOME_MANAGER_CONFIG" ] && HOME_MANAGER_CONFIG="$HOME/.config/nixpkgs"

RED='\033[0;31m\033[1m'
GREEN='\033[0;32m\033[1m'
YELLOW='\033[0;33m\033[1m'
BOLD='\033[0m\033[1m'
NORMAL='\033[0m'

section() {
	echo -e "$GREEN==>$@$NORMAL"
}

message() {
	echo -e "$YELLOW:: $@$NORMAL"
}

info() {
	echo -e "$@"
}

warning() {
	echo -e "${YELLOW}WARNING:: $@$NORMAL"
}

inpath() {
	for i; do
		if ! command -v "$i" >/dev/null 2>&1; then
			return 1
		fi
	done
	return 0
}

#################################################################################

section "GPG"
if [ -d ~/.gnupg ]; then
	## Set up gpg-agent to authenticate.
	chmod -R go-rwx ~/.gnupg

	if [ -e ~/personal ]; then
		git -C ~/personal pull
	else
		git clone ${GITLAB_ROOT}/personal.git ~/personal
	fi
	if [ -e ~/.password-store ]; then
		git -C ~/.password-store pull
	else
		git clone ${GITLAB_ROOT}/password-store.git ~/.password-store
		## The following is necessary to make sure the 'diff' GPG filter is properly set up.
		pass git init
	fi
else
	warning "~/.gnupg not found."
fi

section "Persistent folders"
for i in .config .emacs.d .local/share projects temp; do
	mkdir -pv "$HOME/$i"
done

section "dotfiles"
if [ -e "$DOTFILESDIR" ]; then
  git -C ~/dotfiles remote set-url origin ${GITHUB_ROOT}$USER_NAME/dotfiles.git
  git -C "$DOTFILESDIR" pull
else
	git clone ${GITHUB_ROOT}$USER_NAME/dotfiles.git || exit 1
fi

section "Home manager"
if [ -e "$HOME_MANAGER_CONFIG" ]; then
	home-manager switch
else
	ln -s "$DOTFILESDIR" "$HOME_MANAGER_CONFIG"
	nix-channel --add https://github.com/rycee/home-manager/archive/master.tar.gz home-manager
	nix-channel --update
	nix-shell '<home-manager>' -A install
	cat<<EOF>"$HOME_MANAGER_CONFIG/home.nix"
{ config, pkgs, ... }:

{
  imports = [
    ./machines/$MACHINE.nix
  ];

  programs.home-manager.enable = true;
}
EOF
fi

if inpath emacs; then
	message "Emacs cache folder"
	mkdir -pv "$HOME/.cache/emacs/"
  message "Emacs ELPA packages"
  yes | emacs --batch -l ~/.emacs.d/init.el --eval '(progn (package-refresh-contents) (package-install-selected-packages))'
	message "Emacs local packages"
	if [ -e ~/.local/share/emacs/site-lisp ]; then
		for i in ~/.local/share/emacs/site-lisp/*; do
			echo "$i"
			git -C "$i" pull
		done
	else
		mkdir -pv ~/.local/share/emacs/site-lisp
	fi
fi

if [ -x ~/bin/updatedb-local ]; then
	section "locate db"
	~/bin/updatedb-local
fi

if [ -f ~/personal/history/eshell.gpg ]; then
	section "Shell history"
	mkdir -pv ~/.cache/emacs/eshell/
	yes | gpg --output ~/.cache/emacs/eshell/history --decrypt ~/personal/history/eshell.gpg
fi
