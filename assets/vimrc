" Use Vim settings, rather than Vi settings
set nocompatible

" ============ General Config ============

let mapleader = ","
filetype plugin indent on
syntax on

set encoding=utf-8
set history=1000               " Store lots of :cmdline history
set ruler                      " show the cursor position all the time
set autowrite                  " Automatically :write before running commands
set autoread                   " Reload files changed outside vim
set ttyfast                    " Send more charcters at a given time
set laststatus=2               " Always display the status bar
set noshowmode                 " Don't show the native current mode
set mouse=a                    " Enable mouse use in all modes
set backspace=indent,eol,start " Allow backspace in insert mode
set number                     " Show current line number
set relativenumber             " Show relative line numbers
set hidden                     " Make vim act like all other editors, buffers can exist in the background
set clipboard=unnamed          " Allow copying and yanking from osx clipboard
set cursorline                 " Highlight current line
set scrolloff=8                " Start scrolling when we're 8 lines away from margins
set lcs=tab:⇒·,trail:␣,nbsp:~" " Make naughty characters visible...
set incsearch                  " Find the next match as we type the search
set ignorecase                 " Ignore case when searching...
set smartcase                  " ...unless we type a capital
set magic                      " Enable extended regexes
set regexpengine=1             " Use the old regular expression engine
set hlsearch                   " Hightlight searches by default

" Open new split panes to right and bottom, which feels more natural
set splitbelow
set splitright

" ========== Turn Off Swap Files ==========

set nobackup
set nowritebackup
set noswapfile

" ============== Indentation ==============

set autoindent
set smartindent
set smarttab
set shiftwidth=2
set softtabstop=2
set tabstop=2
set expandtab
set linebreak

" set background=dark
" highlight Visual       ctermfg=Yellow ctermbg=26
" highlight SpecialKey   cterm=bold ctermfg=Blue
" highlight StatusLine   ctermbg=white ctermfg=black
" highlight Pmenu        ctermbg=black ctermfg=white
" highlight PmenuSel     ctermbg=black ctermfg=Yellow

" ======== Vim-plug Initialization ========

" if filereadable(expand("~/.dotfiles/vimrc.bundles"))
"   source ~/.dotfiles/vimrc.bundles
" endif

" ============ Persistent Undo ============
" Keep undo history across sessions, by storing in file.

" if !isdirectory(expand('~').'/.dotfiles/vim/backups')
"   silent !mkdir ~/.dotfiles/vim/backups > /dev/null 2>&1
" endif

" if has('persistent_undo')
"   set undodir=~/.dotfiles/vim/backups
"   set undolevels=5000
"   set undofile
" endif



" Treat <li> and <p> tags like the block tags they are
let g:html_indent_tags = 'li\|p'

"augroup VisibleNaughtiness
"  autocmd!
"  autocmd BufEnter  *       set list
"  autocmd BufEnter  *.txt   set nolist
"  autocmd BufEnter  *.vp*   set nolist
"  autocmd BufEnter  *       if !&modifiable
"  autocmd BufEnter  *           set nolist
"  autocmd BufEnter  *       endif
"augroup END


"====[ Edit my temporary working files ]====================

nmap tt :next ~/temp/temporary_file


" ============ Custom Settings ===========
" Load other settings from ~/.dotfiles/vim/settings directory

" let vimsettings = '~/.dotfiles/vim/settings'

" for fpath in split(globpath(vimsettings, '*.vim'), '\n')
"   exe 'source' fpath
" endfor


"=====[ Comments are important ]==================

highlight Comment term=bold ctermfg=white


" ================ Other =================

augroup vimrcEx
  autocmd!

  " When editing a file, always jump to the last known cursor position.
  " Don't do it for commit messages, when the position is invalid, or when
  " inside an event handler (happens when dropping a file on gvim).
  autocmd BufReadPost *
    \ if &ft != 'gitcommit' && line("'\"") > 0 && line("'\"") <= line("$") |
    \   exe "normal g`\"" |
    \ endif
augroup END

" automatically rebalance windows on vim resize
autocmd VimResized * :wincmd =
